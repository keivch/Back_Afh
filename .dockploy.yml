# Dockploy configuration file
# This file configures the deployment settings for Dockploy

# Application settings
app_name: afh-api
description: "AFH API - Django REST API Application"

# Build settings
build:
  context: .
  dockerfile: Dockerfile
  build_args:
    - PYTHONUNBUFFERED=1
    - PYTHONDONTWRITEBYTECODE=1

# Environment variables
environment:
  - SECRET_KEY=${SECRET_KEY}
  - DEBUG=${DEBUG:-False}
  - URL_DB=${URL_DB}
  - BACKURL=${BACKURL}
  - FRONT_URL=${FRONT_URL}
  - EMAIL_HOST=${EMAIL_HOST}
  - EMAIL_PORT=${EMAIL_PORT}
  - EMAIL_USE_TLS=${EMAIL_USE_TLS}
  - EMAIL_HOST_USER=${EMAIL_HOST_USER}
  - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
  - CLOUD_NAME=${CLOUD_NAME}
  - API_KEY=${API_KEY}
  - API_SECRET=${API_SECRET}
  - APP_ID=${APP_ID}
  - KEY=${KEY}
  - SECRET=${SECRET}
  - CLUSTER=${CLUSTER}

# Port configuration
ports:
  - "8000:8000"

# Health check
healthcheck:
  test: ["CMD", "curl", "-f", "http://localhost:8000/"]
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 40s

# Resource limits
resources:
  memory: "1G"
  cpus: "0.5"

# Restart policy
restart: unless-stopped

# Working directory
working_dir: /app/afh_api

# Command to run
command: ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "3", "--timeout", "120", "afh_api.wsgi:application"]

# Volumes for persistent data
volumes:
  - static_volume:/app/staticfiles
  - media_volume:/app/media

# Pre-deployment commands (these will run before the container starts)
pre_deploy:
  - python manage.py migrate
  - python manage.py collectstatic --noinput

# Post-deployment commands (these will run after the container starts)
post_deploy:
  - echo "Deployment completed successfully"

# Labels for the container
labels:
  - "traefik.enable=true"
  - "traefik.http.routers.afh-api.rule=Host(`your-domain.com`)"
  - "traefik.http.routers.afh-api.tls=true"
  - "traefik.http.routers.afh-api.tls.certresolver=letsencrypt"
  - "traefik.http.services.afh-api.loadbalancer.server.port=8000"

# Network configuration
networks:
  - default

# Logging configuration
logging:
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"
